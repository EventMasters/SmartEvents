{"ast":null,"code":"import _toConsumableArray from \"/Users/rupa/Desktop/SmartEventsUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/rupa/Desktop/SmartEventsUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rupa/Desktop/SmartEventsUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rupa/Desktop/SmartEventsUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rupa/Desktop/SmartEventsUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rupa/Desktop/SmartEventsUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rupa/Desktop/SmartEventsUI/src/app/fuse-layouts/shared-components/quickPanel/QuickPanel.js\";\nimport React, { Component } from 'react';\nimport { withStyles, Divider, Drawer, Typography, ListSubheader } from '@material-ui/core/';\nimport { bindActionCreators } from 'redux';\nimport { FuseScrollbars } from '@fuse';\nimport { connect } from 'react-redux';\nimport * as Actions from './store/actions/index';\nimport withReducer from 'app/store/withReducer';\nimport reducer from './store/reducers';\nimport moment from 'moment';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: 280\n    }\n  };\n};\n\nvar QuickPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuickPanel, _Component);\n\n  function QuickPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuickPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuickPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checked: ['notifications']\n    };\n\n    _this.handleToggle = function (value) {\n      return function () {\n        var checked = _this.state.checked;\n        var currentIndex = checked.indexOf(value);\n\n        var newChecked = _toConsumableArray(checked);\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        _this.setState({\n          checked: newChecked\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(QuickPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getQuickPanelData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          state = _this$props.state,\n          toggleQuickPanel = _this$props.toggleQuickPanel;\n      return React.createElement(Drawer, {\n        classes: {\n          paper: classes.root\n        },\n        open: state,\n        anchor: \"right\",\n        onClose: function onClose() {\n          return toggleQuickPanel(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(FuseScrollbars, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(ListSubheader, {\n        component: \"div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Today\"), React.createElement(\"div\", {\n        className: \"mb-0 py-16 px-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"mb-12 text-32\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, moment().format('dddd')), React.createElement(\"div\", {\n        className: \"flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"leading-none text-32\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, moment().format('DD')), React.createElement(Typography, {\n        className: \"leading-none text-16\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"th\"), React.createElement(Typography, {\n        className: \"leading-none text-32\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, moment().format('MMMM')))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(ListSubheader, {\n        component: \"div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Events\")));\n    }\n  }]);\n\n  return QuickPanel;\n}(Component);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    toggleQuickPanel: Actions.toggleQuickPanel,\n    getQuickPanelData: Actions.getQuickPanelData\n  }, dispatch);\n}\n\nfunction mapStateToProps(_ref) {\n  var quickPanel = _ref.quickPanel;\n  return {\n    state: quickPanel.state,\n    data: quickPanel.data\n  };\n}\n\nexport default withReducer('quickpanel', reducer)(withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(QuickPanel)));","map":{"version":3,"sources":["/Users/rupa/Desktop/SmartEventsUI/src/app/fuse-layouts/shared-components/quickPanel/QuickPanel.js"],"names":["React","Component","withStyles","Divider","Drawer","Typography","ListSubheader","bindActionCreators","FuseScrollbars","connect","Actions","withReducer","reducer","moment","styles","theme","root","width","QuickPanel","state","checked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","setState","props","getQuickPanelData","classes","toggleQuickPanel","paper","format","mapDispatchToProps","dispatch","mapStateToProps","quickPanel","data","withTheme"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport  { withStyles, Divider,Drawer, Typography, ListSubheader } from '@material-ui/core/';\nimport {bindActionCreators} from 'redux';\nimport {FuseScrollbars} from '@fuse';\nimport {connect} from 'react-redux';\nimport * as Actions from './store/actions/index'\nimport withReducer from 'app/store/withReducer';\nimport reducer from './store/reducers';\nimport moment from 'moment';\n\n\nconst styles = theme => ({\n    root: {\n        width  : 280\n       \n    }\n});\n\nclass QuickPanel extends Component {\n\n    state = {\n        checked: ['notifications']\n    };\n\n    handleToggle = value => () => {\n        const {checked} = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if ( currentIndex === -1 )\n        {\n            newChecked.push(value);\n        }\n        else\n        {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        this.setState({\n            checked: newChecked\n        });\n    };\n\n    componentDidMount()\n    {\n        this.props.getQuickPanelData();\n    }\n\n    render()\n    {\n        const {classes, state, toggleQuickPanel} = this.props;\n        return (\n            <Drawer\n                classes={{paper: classes.root}}\n                open={state}\n                anchor=\"right\"\n                onClose={() => toggleQuickPanel(false)}\n            >\n             <FuseScrollbars>\n             <ListSubheader component=\"div\">Today</ListSubheader>\n\n             <div className=\"mb-0 py-16 px-24\">\n                        <Typography className=\"mb-12 text-32\" color=\"textSecondary\">\n                            {moment().format('dddd')}\n                        </Typography>\n                        <div className=\"flex\">\n                            <Typography className=\"leading-none text-32\" color=\"textSecondary\">{moment().format('DD')}</Typography>\n                            <Typography className=\"leading-none text-16\" color=\"textSecondary\">th</Typography>\n                            <Typography className=\"leading-none text-32\" color=\"textSecondary\">{moment().format('MMMM')}</Typography>\n                        </div>\n            </div>\n            <Divider/>\n            <ListSubheader component=\"div\">Events</ListSubheader>\n            \n\n            </FuseScrollbars>\n            </Drawer>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return bindActionCreators({\n        toggleQuickPanel: Actions.toggleQuickPanel,\n        getQuickPanelData: Actions.getQuickPanelData\n    }, dispatch);\n}\n\nfunction mapStateToProps({quickPanel})\n{\n    return {\n        state: quickPanel.state,\n        data:  quickPanel.data\n    }\n}\n\nexport default withReducer('quickpanel',reducer)(withStyles(styles, {withTheme: true})(connect(mapStateToProps, mapDispatchToProps)(QuickPanel)));\n"]},"metadata":{},"sourceType":"module"}